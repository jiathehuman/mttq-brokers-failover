events {
    worker_connections 1024;
}

stream {
    # upstread with failover
    # nginx will automatically failover to next server if current fails
    upstream mqtt_brokers {
        # Primary broker (parent)
        server mosquitto-parent:1883 max_fails=3 fail_timeout=45s;
        # Backup brokers (children) - when parent fails this goes up
        server mosquitto-child1:1883 max_fails=3 fail_timeout=45s backup;
        server mosquitto-child2:1883 max_fails=3 fail_timeout=45s backup;
    }

    # MQTT Load Balancer
    server {
        listen 8883;
        proxy_pass mqtt_brokers;
        proxy_timeout 60s;
        proxy_connect_timeout 10s;
    }
}

http {
    # Health status API
    server {
        listen 8080;

        location /health {
            root /health-status;
            try_files /status.json =404;
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
        }

        location /status {
            return 200 "Load Balancer OK";
            add_header Content-Type text/plain;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
        }
    }
}